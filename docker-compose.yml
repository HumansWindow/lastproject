version: '3.8'

services:
  postgres:
    image: postgres:14
    container_name: alivehuman-postgres
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - alivehuman-network
      
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: alivehuman-backend
    restart: unless-stopped
    depends_on:
      - postgres
    env_file:
      - ./backend/.env
    ports:
      - "3000:3000"
    networks:
      - alivehuman-network
      
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: alivehuman-frontend
    restart: unless-stopped
    ports:
      - "80:3000"
    networks:
      - alivehuman-network
      
  admin:
    build:
      context: ./admin
      dockerfile: Dockerfile
    container_name: alivehuman-admin
    restart: unless-stopped
    ports:
      - "4000:3000"
    networks:
      - alivehuman-network
      
  nginx:
    image: nginx:alpine
    container_name: alivehuman-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/conf.d:/etc/nginx/conf.d
      - ./docker/nginx/ssl:/etc/nginx/ssl
    depends_on:
      - backend
      - frontend
      - admin
    networks:
      - alivehuman-network

networks:
  alivehuman-network:
    driver: bridge

volumes:
  postgres_data:
